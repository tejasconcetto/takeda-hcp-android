package com.takeda.android.fragment;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Typeface;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.text.InputType;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.skk.lib.BaseClasses.BaseActivity;
import com.skk.lib.BaseClasses.BaseFragment;
import com.skk.lib.Interfaces.textWatcherCustom;
import com.skk.lib.utils.AppDelegate;
import com.skk.lib.utils.ParamsKeys;
import com.skk.lib.utils.SessionManager;
import com.takeda.android.R;
import com.takeda.android.activities.HomeActivity;
import com.takeda.android.async.Params;
import com.takeda.android.async.UserTask;
import com.takeda.android.async.resultInterface;

import org.json.JSONObject;


/**
 * Created by Ratan on 7/29/2015.
 */
public class AdditionalInfoFragment extends BaseFragment implements textWatcherCustom {

    View mView;
    Activity mContext;
    SessionManager session;
    EditText mobileNumber, email, userName, mPasswordView,mConfirmPwdView;
    TextView mobileNumberTV, emailTV, userNameTV, mPasswordViewTV, mConfirmPwdViewTV;
    boolean isEmailError = false, isMNoError = false, isUNameError = false, isPwdError = true, isCPwdError = true;
    String password = "";
    JSONObject jsonObject = new JSONObject();

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

        mContext = getActivity();
        session = new SessionManager(mContext);
        mView = inflater.inflate(R.layout.fragment_additional_info, null);
        init(mView);

        mView.findViewById(R.id.proceed_button).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getTextFromET();
            }
        });
        return mView;
    }

    void getTextFromET(){

        if(!checkUpdateCall()) {
            AppDelegate.setTextWatcher(true,mPasswordView,this);
            AppDelegate.setTextWatcher(true,mConfirmPwdView,this);
            AppDelegate.setTextWatcher(true,userName,this);
        }

        AppDelegate.setTextWatcher(true,email,this);

        JSONObject params = new JSONObject();

        try{
            if(!isUNameError && !isEmailError && !isPwdError && !isCPwdError){
                params.put("doctor_id",jsonObject.getString("doctor_id"));
                params.put("user_name",userName.getText().toString());
                params.put("email",email.getText().toString());
                params.put("mobile_number",mobileNumber.getText().toString());
                params.put("password",mPasswordView.getText().toString());
                params.put("access_token",jsonObject.getString("access_token"));

                new UserTask().getJsonRequest(new resultInterface() {
                    @Override
                    public void Success(JSONObject responseJSON, String requestCall) {
                        try{
                            if(getArguments() != null && getArguments().containsKey(SessionManager.KEY_USER_JSON)){

                                showLogs("UpdateCallCheck","call to update profile : "+checkUpdateCall());

                                JSONObject response = responseJSON.getJSONObject(Params.response_success_data);
                                session.createLoginSession(response.getString("doctor_id").toString(),
                                        response.getString("mobile_number").toString(),
                                        response.getString("access_token").toString(),
                                        response.toString());

                                if(!checkUpdateCall()){
                                    session.showLogs("CallCart","Value : "+String.valueOf(getActivity().getIntent().getStringExtra("callFrom")));
                                    startActivity(new Intent(getActivity(), HomeActivity.class));
                                    getActivity().finish();
                                }

                                else{
                                    showSBar(responseJSON.getString(Params.response_message));
                                    getActivity().onBackPressed();
                                }
                            }
                        }

                        catch (Exception e){
                            e.printStackTrace();
                        }
                    }
                },params,true,getActivity(),mView,Params.request_code_profile_update);
            }
        }

        catch (Exception e){
            e.printStackTrace();
        }
    }

    boolean checkUpdateCall(){
        boolean returnVal = false;
        if(getArguments().containsKey("callFrom") && getArguments().getString("callFrom").equalsIgnoreCase("updateProfile")){
            returnVal = true;
        }
        return returnVal;
    }

    void init(View mView){
        try{
            userName = (EditText) mView.findViewById(R.id.username_et);
            mobileNumber = (EditText) mView.findViewById(R.id.mobile_number_et);
            email = (EditText) mView.findViewById(R.id.user_email_et);
            mPasswordView = (EditText) mView.findViewById(R.id.password_et);
            mConfirmPwdView = (EditText) mView.findViewById(R.id.cpassword_et);
            userNameTV = (TextView) mView.findViewById(R.id.username_et_error_tv);
            mobileNumberTV = (TextView) mView.findViewById(R.id.mobile_number_et_error_tv);
            emailTV = (TextView) mView.findViewById(R.id.email_et_error_tv);
            mPasswordViewTV = (TextView) mView.findViewById(R.id.password_et_error_tv);
            mConfirmPwdViewTV = (TextView) mView.findViewById(R.id.cpassword_et_error_tv);


            if(getArguments()!=null){
                jsonObject = new JSONObject(getArguments().getString(SessionManager.KEY_USER_JSON));
                ((TextView)mView.findViewById(R.id.user_name)).setText("Dr. "+jsonObject.getString("doctor_name"));
                ((TextView)mView.findViewById(R.id.user_fax_no)).setText(jsonObject.getString("fax_number"));
                ((TextView)mView.findViewById(R.id.user_account_no)).setText(jsonObject.getString("account_number"));
                ((TextView)mView.findViewById(R.id.user_speciality)).setText(jsonObject.getJSONObject("specialty").getString("specialty_title"));
                ((TextView)mView.findViewById(R.id.user_address)).setText(jsonObject.getString("address"));
                ((TextView)mView.findViewById(R.id.user_sector)).setText(jsonObject.getJSONObject("sector").getString("sector_name"));

                userName.setText(jsonObject.getString("user_name"));
                mobileNumber.setText(jsonObject.getString(Params.json_mobile_number));
                email.setText(jsonObject.getString("email"));

                if(checkUpdateCall()){
                      mView.findViewById(R.id.usernameLayout).setVisibility(View.GONE);
                      mView.findViewById(R.id.pwdLayout).setVisibility(View.GONE);
                      mView.findViewById(R.id.cpwdLayout).setVisibility(View.GONE);
                      isCPwdError = false;
                      isPwdError = false;
                      isUNameError = false;
                }
            }

            mView.findViewById(R.id.proceed_button).setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    getTextFromET();
                }
            });
        }

        catch (Exception e){
            e.printStackTrace();
        }
    }

    @Override
    public void addingText(int editTextViewId, String text) {

        switch (editTextViewId){
            case R.id.username_et:
                String userNameText = userName.getText().toString();
                if(userNameText.length() > 0) {
                    userNameTV.setVisibility(View.GONE);
                    isUNameError = false;
                }
                else {
                    userNameTV.setVisibility(View.VISIBLE);
                    isUNameError = true;
                }
                break;

            case R.id.mobile_number_et:
                String mNumber = mobileNumber.getText().toString();
                if(!AppDelegate.isValidMobileNumber(mNumber)){
                    isMNoError = true;
                    mobileNumberTV.setVisibility(View.VISIBLE);
                }
                else{
                    isMNoError = false;
                    mobileNumberTV.setVisibility(View.GONE);
                }
                break;

            case R.id.user_email_et:
                String emailText = email.getText().toString();
                if(!AppDelegate.isValidEmail(emailText)){
                    isEmailError = true;
                    emailTV.setVisibility(View.VISIBLE);
                }
                else{
                    isEmailError = false;
                    emailTV.setVisibility(View.GONE);
                }
                break;

            case R.id.password_et:
                password = mPasswordView.getText().toString();
                if(!AppDelegate.isValidPassword(password)){
                    isPwdError = true;
                    mPasswordViewTV.setVisibility(View.VISIBLE);
                }
                else{
                    isPwdError = false;
                    mPasswordViewTV.setVisibility(View.GONE);
                }
                break;

            case R.id.cpassword_et:
                String confirm_password = mConfirmPwdView.getText().toString();
                if(!password.equals(confirm_password) || !AppDelegate.isValidPassword(confirm_password)){
                    isCPwdError = true;
                    mConfirmPwdViewTV.setVisibility(View.VISIBLE);
                }
                else{
                    isCPwdError = false;
                    mConfirmPwdViewTV.setVisibility(View.GONE);
                }
                break;
        }
    }
}
